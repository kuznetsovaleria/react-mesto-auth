{"ast":null,"code":"export class Api {\n  constructor({\n    baseUrl,\n    token\n  }) {\n    this._baseUrl = baseUrl;\n    this._token = token;\n  }\n\n  _handleOriginalResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleOriginalResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleOriginalResponse);\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  putLike(_id) {\n    return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  removeLike(_id) {\n    return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  deleteCard(_id) {\n    return fetch(`${this._baseUrl}/cards/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  changeUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-19\",\n  token: \"05a9c3f8-8fc7-415a-8994-abcd561520ba\"\n});\nexport default api;","map":{"version":3,"sources":["/Users/kuznetsovaleria/test/mesto-react/src/api/api.js"],"names":["Api","constructor","baseUrl","token","_baseUrl","_token","_handleOriginalResponse","res","ok","json","Promise","reject","status","getUserData","fetch","headers","authorization","then","getInitialCards","editUserInfo","data","method","body","JSON","stringify","name","about","addNewCard","link","putLike","_id","removeLike","deleteCard","changeUserAvatar","avatar","api"],"mappings":"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","sourcesContent":["export class Api {\n  constructor({ baseUrl, token }) {\n    this._baseUrl = baseUrl;\n    this._token = token;\n  }\n\n  _handleOriginalResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._handleOriginalResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._handleOriginalResponse);\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  putLike(_id) {\n    return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  removeLike(_id) {\n    return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  deleteCard(_id) {\n    return fetch(`${this._baseUrl}/cards/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n\n  changeUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: data.link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-19\",\n  token: \"05a9c3f8-8fc7-415a-8994-abcd561520ba\",\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}