{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kuznetsovaleria/test/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../components/Card\";\nimport api from \"../api/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n\nfunction Main(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const likeRequest = !isLiked ? api.putLike(card._id) : api.removeLike(card._id);\n    likeRequest.then;\n    api.putLike(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = props.cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile page__profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.avatar,\n        alt: currentUser.name,\n        className: \"profile__avatar\",\n        onClick: props.onEditAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          \"aria-label\": \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          onClick: props.onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__profession\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards page__cards\",\n      children: props.cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: props.onCardClick,\n          onCardLike: handleCardLike\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"6EFtDwKFLA/is7iY4XFWtx5cKEI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/kuznetsovaleria/test/mesto-react/src/components/Main.js"],"names":["React","Card","api","CurrentUserContext","Main","props","currentUser","useContext","cards","setCards","useState","handleCardLike","card","isLiked","likes","some","i","_id","likeRequest","putLike","removeLike","then","newCard","newCards","map","c","avatar","name","onEditAvatar","onEditProfile","about","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"../components/Card\";\nimport api from \"../api/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const likeRequest = !isLiked ? api.putLike(card._id) : api.removeLike(card._id);\n\n    likeRequest\n      .then\n    api.putLike(card._id, !isLiked).then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = props.cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n}\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile page__profile\">\n        <img\n          src={currentUser.avatar}\n          alt={currentUser.name}\n          className=\"profile__avatar\"\n          onClick={props.onEditAvatar}\n        />\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            className=\"profile__edit-button\"\n            aria-label=\"Открыть\"\n            onClick={props.onEditProfile}\n          ></button>\n          <p className=\"profile__profession\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      <section className=\"cards page__cards\">\n        {props.cards.map((card) => {\n          return (\n            <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={handleCardLike}/>\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}