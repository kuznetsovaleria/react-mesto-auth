{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kuznetsovaleria/test/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../components/Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n\nfunction Main(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile page__profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.avatar,\n        alt: currentUser.name,\n        className: \"profile__avatar\",\n        onClick: props.onEditAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          \"aria-label\": \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          onClick: props.onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__profession\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards page__cards\",\n      children: props.cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: props.onCardClick\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/kuznetsovaleria/test/mesto-react/src/components/Main.js"],"names":["React","Card","CurrentUserContext","Main","props","currentUser","useContext","handleCardLike","card","isLiked","likes","some","i","_id","api","changeLikeCardStatus","then","newCard","newCards","cards","map","c","setCards","avatar","name","onEditAvatar","onEditProfile","about","onAddPlace","onCardClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBJ,kBAAjB,CAApB;;AAEA,WAASK,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B;AACA,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUR,WAAW,CAACQ,GAA3C,CAAhB,CAF4B,CAI5B;;AACAC,IAAAA,GAAG,CAACC,oBAAJ,CAAyBP,IAAI,CAACK,GAA9B,EAAmC,CAACJ,OAApC,EAA6CO,IAA7C,CAAmDC,OAAD,IAAa;AAC3D;AACF,YAAMC,QAAQ,GAAGC,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACR,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBI,OAArB,GAA+BI,CAAhD,CAAjB,CAF6D,CAG7D;;AACAC,MAAAA,QAAQ,CAACJ,QAAD,CAAR;AACD,KALD;AAMH;;AAEC,sBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,uBAAnB;AAAA,8BACE;AACE,QAAA,GAAG,EAAEb,WAAW,CAACkB,MADnB;AAEE,QAAA,GAAG,EAAElB,WAAW,CAACmB,IAFnB;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,OAAO,EAAEpB,KAAK,CAACqB;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BpB,WAAW,CAACmB;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,sBADZ;AAEE,wBAAW,4CAFb;AAGE,UAAA,OAAO,EAAEpB,KAAK,CAACsB;AAHjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA,oBAAoCrB,WAAW,CAACsB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEvB,KAAK,CAACwB;AAHjB;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AAAS,MAAA,SAAS,EAAC,mBAAnB;AAAA,gBACGxB,KAAK,CAACe,KAAN,CAAYC,GAAZ,CAAiBZ,IAAD,IAAU;AACzB,4BACE,QAAC,IAAD;AAAqB,UAAA,IAAI,EAAEA,IAA3B;AAAiC,UAAA,WAAW,EAAEJ,KAAK,CAACyB;AAApD,WAAWrB,IAAI,CAACK,GAAhB;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAlDQV,I;;KAAAA,I;AAoDT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../components/Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n}\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile page__profile\">\n        <img\n          src={currentUser.avatar}\n          alt={currentUser.name}\n          className=\"profile__avatar\"\n          onClick={props.onEditAvatar}\n        />\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            className=\"profile__edit-button\"\n            aria-label=\"Открыть\"\n            onClick={props.onEditProfile}\n          ></button>\n          <p className=\"profile__profession\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      <section className=\"cards page__cards\">\n        {props.cards.map((card) => {\n          return (\n            <Card key={card._id} card={card} onCardClick={props.onCardClick} />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}