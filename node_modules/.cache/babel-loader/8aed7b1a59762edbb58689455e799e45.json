{"ast":null,"code":"export var BASE_URL=\"https://auth.nomoreparties.co\";var responseCheck=function responseCheck(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(responseCheck);};export var login=function login(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(responseCheck);};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(responseCheck);};","map":{"version":3,"sources":["/Users/kuznetsovaleria/mesto-react-auth/react-mesto-auth/src/auth/auth.js"],"names":["BASE_URL","responseCheck","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QACpBA,CAAAA,GAAG,CAACC,EAAJ,CAASD,GAAG,CAACE,IAAJ,EAAT,CAAsBC,OAAO,CAACC,MAAR,gDAAyBJ,GAAG,CAACK,MAA7B,EADF,EAAtB,CAGA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CACjCY,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAN2B,CAAvB,CAAL,CAQNO,IARM,CAQDhB,aARC,CAAP,CASH,CAVM,CAYP,MAAO,IAAMiB,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACT,KAAD,CAAQC,QAAR,CAAqB,CACtC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CANyB,CAAvB,CAAL,CAQNO,IARM,CAQDhB,aARC,CAAP,CASH,CAVM,CAYP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACjCY,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAGL,iCAA2BO,KAA3B,CAHK,CAFwB,CAAzB,CAAL,CAOFH,IAPE,CAOGhB,aAPH,CAAP,CAQH,CATM","sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst responseCheck = (res) =>\n  res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password })\n    })\n    .then(responseCheck)\n};\n\nexport const login = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password })\n    })\n    .then(responseCheck)\n};\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }})\n        .then(responseCheck)\n}"]},"metadata":{},"sourceType":"module"}