{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kuznetsovaleria/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js\";\nimport closePopupPath from \"../images/close-icon.svg\";\nimport registerSuccess from \"../images/register-success.svg\";\nimport registerFail from \"../images/register-fail.svg\"; // import './styles/Infotool.css'\n\nfunction InfoTooltip(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup popup_info-tooltip ${props.isOpen ? \"popup_opened\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closePopupPath,\n          alt: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          className: \"popup__icon\",\n          onClick: props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__infotooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__infotooltip-img\",\n          src: props.onSuccess ? registerSuccess : registerFail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"popup__infotooltip-message\",\n          children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/kuznetsovaleria/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js"],"names":["InfoTooltip","props","isOpen","closePopupPath","onClose","onSuccess","registerSuccess","registerFail"],"mappings":";;;;wDAGA;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACxB,sBACI;AAAS,IAAA,SAAS,EAAG,4BACjBA,KAAK,CAACC,MAAN,GAAe,cAAf,GAAgC,EACjC,EAFH;AAAA,2BAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,sBAAW,4CAA5C;AAAA,+BACI;AACI,UAAA,GAAG,EAAEC,cADT;AAEI,UAAA,GAAG,EAAC,4CAFR;AAGI,UAAA,SAAS,EAAC,aAHd;AAII,UAAA,OAAO,EAAEF,KAAK,CAACG;AAJnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAwC,UAAA,GAAG,EAAEH,KAAK,CAACI,SAAN,GAAkBC,eAAlB,GAAoCC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAG,UAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;KAtBQP,W;AAwBT,eAAeA,WAAf","sourcesContent":["import closePopupPath from \"../images/close-icon.svg\";\nimport registerSuccess from \"../images/register-success.svg\";\nimport registerFail from \"../images/register-fail.svg\";\n// import './styles/Infotool.css'\n\nfunction InfoTooltip(props) {\n    return (\n        <section className={`popup popup_info-tooltip ${\n            props.isOpen ? \"popup_opened\" : \"\"\n          }`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__close\" aria-label=\"Закрыть\">\n                    <img\n                        src={closePopupPath}\n                        alt=\"Закрыть\"\n                        className=\"popup__icon\" \n                        onClick={props.onClose}/>\n                </button>\n                <div className=\"popup__infotooltip\">\n                <img className=\"popup__infotooltip-img\" src={props.onSuccess ? registerSuccess : registerFail}/>\n                <p className=\"popup__infotooltip-message\">\n                    {}\n                    Вы успешно зарегистрировались!</p>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default InfoTooltip"]},"metadata":{},"sourceType":"module"}